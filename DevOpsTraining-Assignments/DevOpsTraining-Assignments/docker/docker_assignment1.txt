2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
   >> docker pull nginx


3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
   >>docker images

4. Find out the "Full" ImageId of the image that you pulled and write it below.
   >>docker images -q

5. Create a container of your image 
   >>docker run f35646e83998

6. List all the running containers
   >>docker ps 

7. List all the running and stopped containers
   >>docker ps -a

8. Find out the "Full" containerId of the container and write it below.
   >> docker ps -q 

9. Find out how many image layers are used to build this image.


10. Get the Apache Tomcat 7 server image from the docker hub.

   >> docker pull tomcat

11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.

    >> docker run tomcat

12. Find out what is the IP Address of the Apache Tomcat Container that it is running on

    >>docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' f41227683a41

13. Which Port it is using?

    >> docker inspect containerId // will get all details of configuration.

14. Try to access the Tomcat's home page from your machine/vm.
    >>

15. What is the disk size of Apache Tomcat image?
    >>docker images //will get images with sizes 
    >>docker ps --size // will get all running containers with sizes

16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
17. Find out which port is exposed for tomcat?

    >>docker inspect //will give port numbers, environment variables and all other configurations 

18. Run multiple conntainers of tomcat on different port and access it's home page.
    >> docker run -it --rm -p 8889:8080 tomcat 

19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.

   >>docker pull ubuntu:20.04
   >> docker pull ubuntu:20.10

20. Run the container of ubuntu in attached mode.
     >>docker run -it 9140108b62dc

 21. Run the container of another ubuntu in detached mode.

     >>docker run -d ubuntu:20.04

22. Check how many ubuntu containers are running and stopped

    >>docker ps -a

23. Is the tomcat container running? If no, start one.

    >> running

24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).

25.25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
    >>docker start aa6615baf0b6 //starting a stopped container again
    >>docker attach aa6615baf0b6

26. Login as root user in ubuntu container

    >>done
27. Create a file with any name in root directory

   >> touch sample.txt

28. Install software of your choice in ubuntu container using "apt-get install"

    >> apt-get install openjdk-8-jdk //install java 8

29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.

    >> exit
30. Check if the ubuntu container is running.

   >>docker ps -a

31. Create a new ubuntu container out of the same image as that previous container in attached mode.

   >>docker run  -it 9140108b62dc

32. Login as a root user

   >>done

33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this 	Container.
   >>ls 
   >> java -version    //could not see previous files 
   >>docker rm ee47609e7c38   //removing container

34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.

   >> yes

35. Create an Image out of the existing container.

   >> docker commit aa6615baf0b6 myubuntu // creating image of existing container

36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.

   >>docker run -it --name myubuntucontainer 34b3dd11dd12 // yes i found those files

37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.



38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a    >> docker images -a  // shows all
2. -f    >> docker images -f "dangling=false"  //shows images which are associaited with containers
3. -q    >>docker images -q //shows image ids


write atleast 1 command using each option above and prove their concepts as described in the --help.


40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a  >>docker ps -a //shows all container
2. -f  >>docker ps -f "id=d7f499d007f5"  //shows container detail matches with given id
3. -q  >> docker ps -a -q    //shows all container ids
4. -n  >> docker ps -a -n "3"    //shows last n created containers 
5. -l  >>docker ps -l    // shows recently created containers
6. -s  >>docker ps -s   //shows running containers with sizes


